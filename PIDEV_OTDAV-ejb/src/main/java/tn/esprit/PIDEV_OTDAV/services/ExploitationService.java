package tn.esprit.PIDEV_OTDAV.services;

import java.util.List;
import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.NoResultException;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import javax.persistence.TypedQuery;
import tn.esprit.PIDEV_OTDAV.entity.Programme;

import tn.esprit.PIDEV_OTDAV.entity.Exploitation;

@Stateless
@LocalBean
public class ExploitationService implements ExploitationServiceRemote{

	@PersistenceContext(unitName = "PIDEV_OTDAV-ejb")
	EntityManager em ;
	
	@Override
	public List<Exploitation> all(Programme programme) {
		List<Exploitation> listUsage=null;
		TypedQuery<Exploitation> query = em.createQuery("Select u from Exploitation u where u.programme.id= "+programme.getId(), Exploitation.class);	
		try {
			listUsage = query.getResultList();
		} catch (NoResultException e ) {
		}
		return listUsage;
	}

	@Override
	public List<Exploitation> allWithDBArtwork(Programme programme) {
		List<Exploitation> listUsage=null;
		TypedQuery<Exploitation> query = em.createQuery("Select u from Exploitation u where u.artworkNom is null and u.programme.id= "+programme.getId(), Exploitation.class);	
		try {
			listUsage = query.getResultList();
		} catch (NoResultException e ) {
		}
		return listUsage;
	}
	
	@Override
	public Exploitation show(int id) {
		return em.find(Exploitation.class, id);
	}

	@Override
	public void add(Exploitation exploitation) {
		System.out.println("awesome test");
		em.persist(exploitation);
	}

	@Override
	public void edit(Exploitation exploitation) {
		em.merge(exploitation);
	}

	@Override
	public void delete(int id) {
		em.remove(em.find(Exploitation.class, id));
	}

	@Override
	public void updatePoints(Programme programme) {
		System.out.println("coooooooooool");
		System.out.println("hellllloPROGRAMME"+	programme.getId());
		List<Exploitation> listUsage=allWithDBArtwork(programme);
		for (Exploitation exploitation: listUsage){
			System.out.println("eeeeeee"+	exploitation.getId());
			System.out.println("pppp"+	exploitation.getArtwork().getSubCategory().getPoint());
			float point= (exploitation.getDurre() * exploitation.getArtwork().getSubCategory().getPoint())/(programme.getMontant()*100);
			Query query = em.createQuery("UPDATE Exploitation e SET e.point ="+point+" WHERE e.id ="+exploitation.getId());			
			query.executeUpdate();
		}
	}
	
	@Override
	public int nbrExploitationByProgramme(Programme programme){
		int nbrExpolitation=0;
		Query  query1= em.createQuery("select count(e.id) from Exploitation e where e.programme.id="+programme.getId());
		try {
			nbrExpolitation= (int) query1.getSingleResult();
		} catch (NoResultException e ) {
		}
		return nbrExpolitation;
	}

}
